webpackJsonp([17],{158:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(177),r=n(5);t.default=function(e){if(!e)throw new Error("geojson is required");var t=[];return Object(o.d)(e,function(e){t.push(e)}),Object(r.featureCollection)(t)}},177:function(e,t,n){"use strict";n.d(t,"b",function(){return r}),n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u}),n.d(t,"e",function(){return l}),n.d(t,"d",function(){return a}),n.d(t,"f",function(){return c});var o=n(5);function r(e,t,n){if(null!==e)for(var o,i,u,l,a,c,f,s,g=0,y=0,p=e.type,b="FeatureCollection"===p,d="Feature"===p,h=b?e.features.length:1,P=0;P<h;P++){a=(s=!!(f=b?e.features[P].geometry:d?e.geometry:e)&&"GeometryCollection"===f.type)?f.geometries.length:1;for(var v=0;v<a;v++){var m=0,M=0;if(null!==(l=s?f.geometries[v]:f)){c=l.coordinates;var k=l.type;switch(g=!n||"Polygon"!==k&&"MultiPolygon"!==k?0:1,k){case null:break;case"Point":t(c,y,P,m,M),y++,m++;break;case"LineString":case"MultiPoint":for(o=0;o<c.length;o++)t(c[o],y,P,m,M),y++,"MultiPoint"===k&&m++;"LineString"===k&&m++;break;case"Polygon":case"MultiLineString":for(o=0;o<c.length;o++){for(i=0;i<c[o].length-g;i++)t(c[o][i],y,P,m,M),y++;"MultiLineString"===k&&m++,"Polygon"===k&&M++}"Polygon"===k&&m++;break;case"MultiPolygon":for(o=0;o<c.length;o++){for("MultiPolygon"===k&&(M=0),i=0;i<c[o].length;i++){for(u=0;u<c[o][i].length-g;u++)t(c[o][i][u],y,P,m,M),y++;M++}m++}break;case"GeometryCollection":for(o=0;o<l.geometries.length;o++)r(l.geometries[o],t,n);break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var n=0;n<e.features.length;n++)t(e.features[n],n)}function u(e){var t=[];return r(e,function(e){t.push(e)}),t}function l(e,t){var n,o,r,i,u,l,a,c,f,s,g=0,y="FeatureCollection"===e.type,p="Feature"===e.type,b=y?e.features.length:1;for(n=0;n<b;n++){for(l=y?e.features[n].geometry:p?e.geometry:e,c=y?e.features[n].properties:p?e.properties:{},f=y?e.features[n].bbox:p?e.bbox:void 0,s=y?e.features[n].id:p?e.id:void 0,u=(a=!!l&&"GeometryCollection"===l.type)?l.geometries.length:1,r=0;r<u;r++)if(null!==(i=a?l.geometries[r]:l))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":t(i,g,c,f,s);break;case"GeometryCollection":for(o=0;o<i.geometries.length;o++)t(i.geometries[o],g,c,f,s);break;default:throw new Error("Unknown Geometry Type")}else t(null,g,c,f,s);g++}}function a(e,t){l(e,function(e,n,r,i,u){var l,a=null===e?null:e.type;switch(a){case null:case"Point":case"LineString":case"Polygon":return void t(Object(o.feature)(e,r,{bbox:i,id:u}),n,0)}switch(a){case"MultiPoint":l="Point";break;case"MultiLineString":l="LineString";break;case"MultiPolygon":l="Polygon"}e.coordinates.forEach(function(e,i){var u={type:l,coordinates:e};t(Object(o.feature)(u,r),n,i)})})}function c(e,t){a(e,function(e,n,i){var u=0;if(e.geometry){var l=e.geometry.type;"Point"!==l&&"MultiPoint"!==l&&function(e,t,n,o){var i=n;r(e,function(e,o,r,u,l){i=0===o&&void 0===n?e:t(i,e,o,r,u,l)},o)}(e,function(r,l,a,c,f,s){var g=Object(o.lineString)([r,l],e.properties);return t(g,n,i,s,u),u++,l})}})}}});